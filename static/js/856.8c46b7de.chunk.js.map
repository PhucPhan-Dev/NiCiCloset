{"version":3,"file":"static/js/856.8c46b7de.chunk.js","mappings":"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","sources":["components/atoms/TextArea/index.tsx","pages/Contact/index.tsx","utils/schemas.ts"],"sourcesContent":["import React, { forwardRef } from 'react';\n\nimport Typography from '../Typography';\n\nimport mapModifiers from 'utils/functions';\n\nexport interface TextAreaProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {\n  error?: string;\n  label?: string;\n}\n\nconst TextAreaRef: React.ForwardRefRenderFunction<HTMLTextAreaElement, TextAreaProps> = ({\n  label, error, placeholder, rows, id, required, ...innerProps\n}, ref) => (\n  <div className={mapModifiers(\n    'a-textarea',\n    error && 'error',\n  )}\n  >\n    {label && (\n      <label htmlFor={id} className=\"a-input_label\">\n        <Typography.Text type=\"span\" modifiers={['14x16']}>{label}</Typography.Text>\n        {required && <Typography.Text type=\"span\" modifiers={['14x16', 'ferrariRed']}>*</Typography.Text>}\n      </label>\n    )}\n    <div className=\"a-textarea_wrap\">\n      <textarea\n        {...innerProps}\n        className=\"a-textarea_input\"\n        placeholder={placeholder}\n        rows={rows}\n        ref={ref}\n      />\n    </div>\n    {error && (\n      <span className={mapModifiers('a-textarea_error')}>{error}</span>\n    )}\n  </div>\n);\n\nconst TextArea = forwardRef(TextAreaRef);\n\nexport default TextArea;\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport React from 'react';\nimport { Controller, FormProvider, useForm } from 'react-hook-form';\nimport { useMutation } from 'react-query';\nimport { toast } from 'react-toastify';\n\nimport Button from 'components/atoms/Button';\nimport Icon from 'components/atoms/Icon';\nimport Image from 'components/atoms/Image';\nimport Input from 'components/atoms/Input';\nimport Link from 'components/atoms/Link';\nimport TextArea from 'components/atoms/TextArea';\nimport Typography from 'components/atoms/Typography';\nimport Container from 'components/organisms/Container';\nimport Section from 'components/organisms/Section';\nimport { contactUsService } from 'services/contact';\nimport { ContactDataRequest } from 'services/contact/types';\nimport { contactScheme } from 'utils/schemas';\n\nconst Contact: React.FC = () => {\n  const method = useForm<ContactDataRequest>({\n    resolver: yupResolver(contactScheme),\n  });\n  const { mutate: contactMutate, isLoading } = useMutation(\n    'contactAction',\n    contactUsService,\n    {\n      onSettled: () => {\n        method.reset();\n        toast.success('Cảm ơn bạn đã để lại thông tin!', { toastId: 'subscribeSuccess' });\n      }\n    }\n  );\n  const onSubmit = (data: ContactDataRequest) => {\n    contactMutate(data);\n  };\n  return (\n    <Section noSpace>\n      <div className=\"p-contact\">\n        <Image imgSrc=\"https://klbtheme.com/clotya/wp-content/uploads/elementor/thumbs/image-15-pqcdr1rlo5zgkmf9mhlpgtdb7vxe92fhkbv7njwet4.jpg\" alt=\"contact\" ratio=\"96x23\" />\n        <Container>\n          <div className=\"p-contact_flex\">\n            <div className=\"p-contact_content\">\n              <Typography.Heading type=\"h1\" modifiers={['40x48']}>Liên hệ</Typography.Heading>\n              {/* <div className=\"p-contact_description\">\n              <Typography.Text modifiers={['16x18']}>\n                In hac habitasse platea dictumst. Pellentesque viverra sem nec orci lacinia,\n                in bibendum urna mollis. Quisque nunc lacus, varius vel leo a,\n                pretium lobortis metus.\n                Vivamus consectetur consequat justo.\n              </Typography.Text>\n            </div> */}\n              <div className=\"p-contact_form\">\n                <FormProvider {...method}>\n                  <div className=\"p-contact_field\">\n                    <Controller\n                      name=\"name\"\n                      control={method.control}\n                      render={({\n                        field: { onChange, value },\n                        fieldState: { error },\n                      }) => (\n                        <Input\n                          name=\"email\"\n                          required\n                          label=\"Họ và tên\"\n                          type=\"text\"\n                          value={value}\n                          bordered\n                          onChange={onChange}\n                          error={error?.message}\n                        />\n                      )}\n                    />\n                  </div>\n                  <div className=\"p-contact_field\">\n                    <Controller\n                      name=\"email\"\n                      control={method.control}\n                      render={({\n                        field: { onChange, value },\n                        fieldState: { error },\n                      }) => (\n                        <Input\n                          name=\"email\"\n                          required\n                          label=\"Email\"\n                          type=\"text\"\n                          value={value}\n                          bordered\n                          onChange={onChange}\n                          error={error?.message}\n                        />\n                      )}\n                    />\n                  </div>\n                  <div className=\"p-contact_field\">\n                    <Controller\n                      name=\"subject\"\n                      control={method.control}\n                      render={({\n                        field: { onChange, value },\n                        fieldState: { error },\n                      }) => (\n                        <Input\n                          name=\"subject\"\n                          required\n                          label=\"Chủ đề\"\n                          type=\"text\"\n                          value={value}\n                          bordered\n                          onChange={onChange}\n                          error={error?.message}\n                        />\n                      )}\n                    />\n                  </div>\n                  <div className=\"p-contact_field\">\n                    <Controller\n                      name=\"message\"\n                      control={method.control}\n                      render={({\n                        field: { onChange, value },\n                        fieldState: { error },\n                      }) => (\n                        <TextArea\n                          name=\"message\"\n                          label=\"Lời nhắn\"\n                          rows={6}\n                          value={value}\n                          onChange={onChange}\n                          error={error?.message}\n                        />\n                      )}\n                    />\n                  </div>\n                  <div className=\"p-contact_button\">\n                    <Button\n                      variant=\"primary\"\n                      sizes=\"h42\"\n                      handleClick={method.handleSubmit(onSubmit)}\n                      loading={isLoading}\n                    >\n                      Gửi thông tin\n                    </Button>\n                  </div>\n                </FormProvider>\n              </div>\n            </div>\n            <div className=\"p-contact_info\">\n              <div className=\"p-contact_info_line\">\n                <Icon iconName=\"phone\" size=\"20\" />\n                <Link useExternal href=\"tel:0388197156\" target=\"_blank\"><Typography.Text modifiers={['16x18']}>0388.197.156</Typography.Text></Link>\n              </div>\n              <div className=\"p-contact_info_line\">\n                <Icon iconName=\"gmail\" size=\"20\" />\n                <Link useExternal href=\"mailto:nici.store99@gmail.com\" target=\"_blank\"><Typography.Text modifiers={['16x18']}>nici.store99@gmail.com</Typography.Text></Link>\n              </div>\n              <div className=\"p-contact_info_line\">\n                <Icon iconName=\"facebook\" size=\"20\" />\n                <Link useExternal href=\"https://www.facebook.com/nici.store99\" target=\"_blank\"><Typography.Text modifiers={['16x18']}>fb.com/nici.store99</Typography.Text></Link>\n              </div>\n              <div className=\"p-contact_info_line\">\n                <Icon iconName=\"instagram\" size=\"20\" />\n                <Link useExternal href=\"https://www.instagram.com/nici.store/\" target=\"_blank\"><Typography.Text modifiers={['16x18']}>instagram.com/nici.store</Typography.Text></Link>\n              </div>\n              <div className=\"p-contact_info_line\">\n                <Icon iconName=\"tiktok\" size=\"20\" />\n                <Link useExternal href=\"https://www.tiktok.com/@nici.store\" target=\"_blank\"><Typography.Text modifiers={['16x18']}>tiktok.com/@nici.store</Typography.Text></Link>\n              </div>\n            </div>\n          </div>\n        </Container>\n      </div>\n    </Section>\n  );\n};\n\nexport default Contact;\n","import * as yup from 'yup';\n\nexport const phoneRegExp = /(84|0[3|5|7|8|9])+([0-9]{8})\\b/;\n\nexport const loginSchema = yup.object({\n  email: yup.string().required('Vui lòng nhập lại địa chỉ email').email('Email không hợp lệ'),\n  password: yup.string().required('Vui lòng nhập mật khẩu'),\n});\n\nexport const registerSchema = yup.object({\n  fullName: yup.string().required('Vui lòng nhập họ tên'),\n  phone: yup.string().required('Vui lòng nhập số điện thoại').matches(phoneRegExp, 'Số điện thoại không hợp lệ'),\n  email: yup.string().required('Vui lòng nhập lại địa chỉ email').email('Email không hợp lệ'),\n  password: yup.string().required('Vui lòng nhập mật khẩu').min(6, 'Mật khẩu phải chứa ít nhất 6 kí tự'),\n});\n\nexport const shippingAddressSchema = yup.object({\n  phone: yup.string().required('Vui lòng nhập số điện thoại').matches(phoneRegExp, 'Số điện thoại không hợp lệ'),\n  address: yup.string().required('Vui lòng nhập địa chỉ'),\n  name: yup.string().required('Vui lòng nhập tên'),\n  cityId: yup.number().required('Vui lòng chọn tỉnh / thành phố'),\n  districtId: yup.number().required('Vui lòng chọn quận / huyện'),\n  wardId: yup.number().required('Vui lòng chọn phường / xã'),\n});\n\nexport const updateProfileSchema = yup.object({\n  fullName: yup.string().required('Vui lòng nhập họ tên'),\n  phone: yup.string().required('Vui lòng nhập số điện thoại').matches(phoneRegExp, 'Số điện thoại không hợp lệ'),\n});\n\nexport const changePasswordSchema = yup.object({\n  oldPassword: yup.string().required('Vui lòng nhập mật khẩu'),\n  password: yup.string().required('Vui lòng nhập mật khẩu mới'),\n  confirmPassword: yup.string().required('Vui lòng nhập xác nhận mật khẩu mới').oneOf([yup.ref('password')], 'Mật khẩu xác nhận không trùng khớp'),\n});\n\nexport const orderSchema = yup.object({\n  cityId: yup.number().required('Vui lòng chọn tỉnh / thành phố'),\n  districtId: yup.number().required('Vui lòng chọn quận / huyện'),\n  wardId: yup.number().required('Vui lòng chọn phường / xã'),\n  address: yup.string().required('Vui lòng nhập địa chỉ'),\n  name: yup.string().required('Vui lòng nhập họ và tên'),\n  phone: yup.string().required('Vui lòng nhập số điện thoại').matches(phoneRegExp, 'Số điện thoại không hợp lệ'),\n  email: yup.string().required('Vui lòng nhập lại địa chỉ email').email('Email không hợp lệ'),\n});\n\nexport const buyForMeSchema = yup.object({\n  fullname: yup.string().required('Vui lòng nhập họ tên'),\n  phone: yup.string().required('Vui lòng nhập số điện thoại').matches(phoneRegExp, 'Số điện thoại không hợp lệ'),\n  email: yup.string().required('Vui lòng nhập lại địa chỉ email').email('Email không hợp lệ'),\n});\n\nexport const contactScheme = yup.object({\n  name: yup.string().required('Vui lòng nhập họ tên'),\n  email: yup.string().required('Vui lòng nhập lại địa chỉ email').email('Email không hợp lệ'),\n  subject: yup.string().required('Vui lòng nhập chủ để'),\n  message: yup.string().required('Vui lòng để lại lời nhắn')\n});\n"],"names":["TextAreaRef","ref","label","error","placeholder","rows","id","required","innerProps","className","mapModifiers","htmlFor","type","modifiers","TextArea","forwardRef","method","useForm","resolver","yupResolver","contactScheme","useMutation","contactUsService","onSettled","reset","toast","toastId","contactMutate","mutate","isLoading","noSpace","imgSrc","alt","ratio","name","control","render","field","onChange","value","fieldState","bordered","message","variant","sizes","handleClick","handleSubmit","data","loading","iconName","size","useExternal","href","target","phoneRegExp","loginSchema","yup","email","password","registerSchema","fullName","phone","matches","min","shippingAddressSchema","address","cityId","districtId","wardId","updateProfileSchema","changePasswordSchema","oldPassword","confirmPassword","oneOf","orderSchema","buyForMeSchema","fullname","subject"],"sourceRoot":""}